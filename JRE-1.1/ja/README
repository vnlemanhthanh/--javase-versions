
                             README

                     Java(tm) Development Kit
                          JDK(tm) 1.1.1

-----------------------------------------------------------------------
目次


  Java の概要
    - 紹介
    - 目的
    - バージョン間の互換性
    - バグの修正
    - JDK の内容
    - 日本語版パッケージに関する情報
    - 詳細情報の入手方法
    - ご意見の提出方法
    - バグ報告と機能に関する要望
    - JavaBeans(tm) と Beans Development Kit

  Java のインストールと実行
    - インストールに関する注意
    - Windows
      - Java ツール群を Microsoft Windows で動作させるには
      - Windows における PATH と CLASSPATH
      - Windows インストールのトラブルシューティング
    - Solaris
      - Java ツール群を Solaris で動作させるには
      - Solaris における PATH と CLASSPATH
      - Solaris インストールのトラブルシューティング
    - AppletViewer でのアプレットの実行方法
    - Java デバッガでのプログラムのデバッグ方法

=======================================================================
                           JAVA の概要
=======================================================================

-----------------------------------------------------------------------
紹介
-----------------------------------------------------------------------
JDK 1.1.1 をダウンロードしていただき、ありがとうございます。

これは Java Development Kit のバージョン 1.1.1 (JDK 1.1.1) です。JDK を
使うと、1.1 Java Core API に準拠したアプレットやアプリケーションを作成す
ることができます。この JDK は、JDK 1.0.2 に機能面、パフォーマンス面、品
質面での改良と、JDK1.1 以降のバグ修正を加えたものです。

JDK1.1.1 はバグ修正リリースです。JDK1.1 の最初のベータ・リリース以来の
修正は、CHANGES ファイルに書かれています。

バグ修正リリースには、API の変更は行われません。したがって、以下において
は本プラットフォームを Java プラットフォーム 1.1 (1.1.1 ではなく) と呼び
ます。1.1.1 において、バグは修正されましたが、プラットフォームに変更は
ありません。

JDK 1.1 の新機能としては、国際化、署名付きアプレット、JAR ファイルフォー
マット、AWT (ウィンドウツールキット) の拡張、JavaBeans(tm) コンポーネン
トモデル、ネットワーキングの拡張、多倍長数値用の Math パッケージ、リモー
トメソッド呼び出し、リフレクション、データベースへの接続、新しい Java 
メソッドインタフェース、オブジェクトの直列化、内部クラス、パフォー
マンスの向上などがあります。

これらの機能の詳細については、JDKドキュメンテーションの「新機能の概要」
を参照してください。

JDK の品質向上のための努力の一環として、バグの修正と新機能の開発は継続
して行っていきます。[バグ修正の優先順位をつけられるように] バグを見つ
けた場合には、「バグの報告方法」の節に記載されている手順に従い、
できるだけ早くご連絡ください。

当社では、JDK に関する技術の Web ページも公開しています。ここでは Java
IDL、ネイティブスレッド、OS プラットフォームに関する情報を提供しています。

JDK は、米国 Sun Microsystems, Inc.（以下「米国サン」という）
の製品です。JavaSoft は、米国サンの１部門であり、JDK の開発を
行っています。


-----------------------------------------------------------------------
目的
-----------------------------------------------------------------------
JDKを使うと次のことが可能です。

      - Java 1.1 をサポートするブラウザで実行できるアプレットを開発でき
        ます。
        Java 1.1 をサポートするブラウザとしては、HotJava バージョン 1.0 
        があります。Netscape Navigator と Microsoft Internet Explorer
        でも将来的にサポートされる予定です。

      - Java アプリケーションを開発できます。アプリケーションはブラウザ無し
	で実行できます。（HotJava そのものが Java アプリケーション です。）


-----------------------------------------------------------------------
バージョン間の互換性
-----------------------------------------------------------------------
JDK 1.0.2 で動作していたアプレットやアプリケーションは、基本的には JDK 1.
1.1 でも正しく動作します。正しく動作しない場合はバグです。ただし、セキュリ
ティ違反や、インプリメンテーションおよび設計上のバグを修正するために、ま
れに互換性が保たれていないことがあります。

新しい 1.1 API を使用するアプレットは、1.0.2 のみをサポートするブラウザ 
(Internet Explorer 3.0 や Netscape 3.0、HotJava のアルファ版およびプリベ
ータ 1 版) では、当然ながら正しく動作しません。ただし、1.0.2 で定義された A
PI のみを使用するアプレットで、JDK 1.1 のコンパイラでコンパイルしたもの
は、基本的には 1.0.2 のブラウザでも正しく動作します。この「下位」互換性の
テストは完全には行われていないので、保証はされていません。

詳細については、次に示す互換性に関する文書を参照してください。

   http://java.sun.com/products/JDK/1.1/compatibility.html

この互換性に関する文書に記載されていないような非互換性を見つけた場合は、
「バグの報告方法」に記載されている手順に従って互換性にバグがあることを
報告してください。互換性は非常に重要な問題であり、「Write Once, Run Anywhere(tm)」
（一度作成すれば、いつでもどこでも実行できる）という約束の柱でもあります。


-----------------------------------------------------------------------
バグの修正
-----------------------------------------------------------------------
どのリリースに関しても言えることですが、JDK を頻繁にテストし、
バグ修正を行っています。重要なバグを見つけた場合は、「既知のバグ」として
報告します。これは定期的に更新するバグリストです。このリストは、次の Web
 ページで見ることができます。

   http://java.sun.com/products/JDK/1.1/knownbugs/

ベータサイクルで修正された重要なバグのリストについては、次の「修正済みの
バグ」を参照してください。

   http://java.sun.com/products/JDK/1.1/fixedbugs/

JDK1.1.1 以降も、バグ修正を取り入れたリリースを行う予定です。無論のこと、
今後のリリースを成功に導くためには、皆さまからのご意見やバグ報告がとても
重要となります。当社では、皆さまからのフィードバックを今後のリリース計画
に役立てるつもりです。バグの報告や、機能の提案、ご意見の連絡の方法につい
ては、後の節の「ご意見の提出方法」「バグの報告と機能の提案方法」を参照し
てください。


-----------------------------------------------------------------------
JDK の内容
-----------------------------------------------------------------------

Javaランタイム ----------------------------------------------------------

    - Java Core Class (classes.zip)
            このファイルを unzip しないように注意してください ! 
            このファイルを unzip すると、コンパイラやインタープリタ
            がその中のクラスファイルに正しくアクセスできなくなります。
            このファイルには、JDK のコンパイル済み .class ファイルが
            すべて含まれています。

    - Java インタプリタ (java)
            Java バイトコードを実行するファイルです。
            つまり、Java プログラミング言語で作成されたプログラムを
            実行します。

JAVA ソースファイル ----------------------------------------------------

    - public クラス用の Java ソースファイル
            (src.zip ファイルまたは src ディレクトリ)
            上記の Java Core Class の classes.zip ファイルに含まれている
            クラスファイルを作成するのに必要なソースファイルセットで
            す。これらは、開発者が Java を学び使用するのに役立つ情報
            を提供する目的でのみ配布されているファイルです。private の
            java.* クラスや sun.* クラスは含んでいないので、classes.zip
            ファイルをコンパイルし直すことはできません。

            これらのクラスを修正しないでください。これらのクラスのサブク
            ラスを作成し、必要に応じてオーバーライドするようにしてくださ
            い。これらのクラスの詳細は、javadoc によって生成される API 
            リファレンスドキュメンテーションに記載されています。

            プラットフォームによるインストール内容の違い
             - Windowsでは、これらはインストール時に自動的に unzip されます。
             - Solaris では、src.zip ファイルを自分で unzip する必要があり
               ます。
               正しいバージョンの unzip は、無償で次のサイトから入手
               できます。ソース形態ですので、コンパイルが必要です。

               http://www.cdrom.com/pub/infozip/zlib/

               もしくは

               ftp://ftp.cdrom.com/pub/infozip/zlib/

JAVA ツール ------------------------------------------------------------

    - Java コンパイラ (javac)
            Java プログラミング言語で作成したプログラムをバイトコードに
            コンパイルします。

    - Java AppletViewer (appletviewer)
            アプレットのテストと実行に使用します。

    - Java デバッガ (jdb)
            Java プログラムのバグを見つけるのに役立ちます。

    - クラスファイル逆アセンブラ (javap)
            コンパイル済みの Java ファイルを逆アセンブルし、Java のバ
            イトコード表現をプリントアウトします。

    - Java ドキュメンテーションジェネレータ (javadoc)
            Java ソースファイルセット内の宣言とドキュメンテーションコメント
	    を解析し、publicクラスや protected クラス、インタフェース、構築子、
  	    メソッド、フィールドについて記述した HTML ページのセットを生成します。
            クラス、クラス階層、すべての API のインデックスを生成します。

    - C ヘッダーおよびスタブファイルジェネレータ(javah)
            Java コードにネイティブメソッドを追加します。

    - Java アーカイブツール (jar)
            複数の Java ファイルを 1 つの jar ファイルにまとめます。

    - ディジタル署名ツール (javakey)
            エンティティとそれに関連づけられているキー、認証、保証を
	  　管理します。

    - ネイティブ / ASCII コンバータ (native2ascii)
            ネイティブ文字コードのファイルを \udddd Unicode 表現を含
            む ASCII ファイルに変換します。

    - Java RMI スタブコンバータ (rmic)
            リモートオブジェクトインプリメンテーションを含むコンパイル済
            みの Java クラス名からオブジェクトを生成します。

    - Java リモートオブジェクトレジストリ (rmiregistry)
            カレントホストの指定のポート上にリモートオブジェクトを作成し
            て開始します。

    - シリアルバージョンコマンド (serialver)
            1 つまたは複数のクラスの serialVersionUID を派生クラスにコピ
            ーできる適切な形式で返します。

    - AWT 1.1 変換ツール (updateAWT)
            bin ディレクトリではなく、JDK AWT ドキュメンテーションに同梱
            されています。
            推奨されない 1.0 AWT の名前を新しい 1.1 AWT の名前に更新します。
            (Sun Solaris および UNIX システム、もしくは MKS ツールキットを
            インストールした Windows システム用)。

    - 各種 C ライブラリとインクルードファイル

JAVA ドキュメンテーションおよびデモ ------------------------------------------

    - demo ディレクトリ
            awt-1.1         AWT デモ群
            i18n            国際化デモ群

            Animator        汎用のアニメータ
            ArcTest         弧の描画と塗りつぶしのテスト
            BarChart        簡単な棒グラフアプレット
            Blink           点滅するマルチカラーのテキスト
            CardTest        カードレイアウトマネージャのテスト
            Clock           アナログ時計
            DitherTest      イメージディザリングのテスト
            DrawTest        点と線の描画
            Fractal         フラクタル画像
            GraphLayout     弛緩の繰り返しによるグラフの配置
            GraphicsTest    グラフィック操作のテスト
            ImageMap        すぐに反応を返すイメージマップ
            JumpingBox      ジャンピングボックスを捕まえる
            MoleculeViewer  3 次元化学モデルビューア
            NervousText     ナーバスなテキスト
            SimpleGraph     簡単なグラフの描画
            SortDemo        アニメーションによるソートアルゴリズム
            SpreadSheet     簡単なスプレッドシート
            TicTacToe       まるばつゲーム
            WireFrame       3 次元のワイヤフレームモデルビューア

      RMI のデモは別途ダウンロードできる JDK ドキュメンテーション
      に含まれています。目次の「サンプルアプレット」を参照してください。

    - README
            今お読みになっているこのファイルです。

    - CHANGES
            ベータ版および最終版で加えられた変更内容を記載して
            います。

    - COPYRIGHT
            JDK ソフトウェアの著作権情報を記載しています。

    - LICENSE
            JDK ソフトウェアのライセンス条項です。

注意: JDK には Web ブラウザは含まれていません。HotJava(tm) の入手方法に
ついては、HotJava ブラウザの Web ページを参照してください。

      http://java.sun.com/products/HotJava/


-----------------------------------------------------------------------
日本語版パッケージに関する情報
-----------------------------------------------------------------------

サポートプラットフォーム ----------------------------------------------

JDK1.1.1 Japanese Edition は次のプラットフォームをサポートしてます。
        - Solaris 2.5.1 Sparc プラットフォーム版の CDE 環境。
          （OpenWindows はサポートしていません。）
        - Windows 95、Windows NT（PC/AT 互換機に対応。）


Bug 情報 --------------------------------------------------------------

        AWT
        - Win32 プラットフォーム上では、TextField で ASCII 文字と漢字の
          混ざった文章を連続して入力すると、確定した時に文字列の順番が
          くずれることがあります。

          対策：それぞれの文字種を入力する都度、確定してください。

        - awt.Component のサブクラスは、IM 経由の KeyTyped を認識できません。

        - Solaris プラットフォーム上では、IM のステータス領域がウィンドウ
          領域の一部として占有されるため、内部のコンポーネントがすべて
          表示されない場合があります。

          対策：フレームウィンドウの大きさを指定するときには注意してください。

        - Solaris プラットフォーム上では、FileDialogue メッセージは英語と
          日本語が混在して表示されます。

        入出力
        - non-ASCII 文字列で表されたディレクトリおよびプロパティは認識
          できません。

          対策：ディレクトリ名には ASCII 文字を使ってください。

        - EUCJIS, SJIS, JIS から Unicode への変換では JIS X 0208 の逆斜線
          '＼' (1 区 32 点) から Unicode 値 FF3C ('＼') の文字に変換され
          ますが, 逆の変換は行われません．


                Unicode         EUCJIS  SJIS    JIS
                FF3C    ←      A1C0    815F    2140
                FF3C    →      変換されません (置換文字になります)

        - JIS から Unicode への変換で、ファイルの最後の文字が JIS X 0201
          かな文字である場合に内部エラーが発生したり変換結果の最後が
          不適当な文字列になったりする場合があります。

          対策：ファイルの最後の文字が JIS X 0201 かな文字にならないように
          してください。

        - Unicode と JIS の間の変換で JIS X 0201 かな文字が正しく変換され
          ません。

          対策：
                Unicode ← JIS
                        SO/SI を使った表現の文字列であれば変換できます。
                        SO/SI を使った表現とは、コマンド euctojis の出力
                        のように制御文字 SO('\016') と SI('\017') を使っ
                        て JIS X 0201 かな文字を指定する方法です。

                Unicode → JIS
                        回避方法はありません。

        システム
        - Win32 プラットフォーム上では、dateform のデフォルト例の時間が
          正しく表示されません。

          対策：java の実行時に、-Duser.timezone=JST のように、user.timezone
          プロパティを指定してください。

        テキスト
        - システム標準出力では java.text.NumberFormat クラスの CurrencyInstance
          を使って数値を金額表現の文字列に変換する場合に、円記号として
          Unicode 値 00A5 '\' の文字が使われますが、この文字は EUCJIS, SJIS
          や JIS に変換されません。

        アプレットビューワ
        - Win32 プラットフォーム上の appletviewer を引数無しで起動すると、使用法
          のメッセージが英文で出力されます。


        JAVA
        - java.math.BigInteger の構築子 BigInteger(String) に "０"（全角ゼロ）
          という文字列を与えて構築させると、toString() できなくなります。
          "0" では問題ありません。

          対策：構築子の引数に全角０を使わないでください。



ディレクトリツリー ----------------------------------------------------

JDK1.1.1 Japanese Edition をインストールした後のディレクトリツリーは、次の
ようになります。


                         jdk1.1.1
 _____________________________|________________________________________
 |     |         |      |           |    |        |     |   |    |    |
ja index.html README COPYRIGHT ... bin include classes docs lib demo src
 |                                                      |
 |                             _________________________|___________
 |                             |       |        |       |          |
 |                            api  tooldocs relnotes  guide    index.html
 |                             |       |        |       |
 |
 |
 +-------------------+
    _________________|_________________
    |         |      |         |      |  
index.html README CHANGES COPYRIGHT LICENSE



-----------------------------------------------------------------------
詳細情報の入手方法
-----------------------------------------------------------------------
この README ファイルと付属の CHANGES ファイル、LICENSE ファイル、COPYRIGHT 
ファイル、demo ディレクトリ、src.zip 内のソースコードは JDK ソフトウ
ェアバンドルに含まれている単なる「ドキュメンテーション」です。

残りのドキュメンテーションは、「JDK 1.1 ドキュメンテーション」というバン
ドルで、このソフトウェアをダウンロードしたのと同じページから別途ダウンロ
ードできるようになっています。

          http://java.sun.com/products/JDK/1.1/

この JDK 1.1 ドキュメンテーションには次の情報が含まれています。

 - JDK リリースノート
 - JDK API リファレンス
 - JDK 新機能ガイド
 - JDK デモ
 - JDK ツールドキュメンテーション
 - Java チュートリアル


-----------------------------------------------------------------------
ご意見の提出方法
-----------------------------------------------------------------------
皆さまからのご意見やご提案をできるだけ迅速に受けるよう努力して
います。

機能面での要望、バグの報告については、次の節の連絡方法を参照してください。
その他のご意見やご提案については、以下の Sun のサイトにリストされている 
JavaSoft の E-mail アドレスに直接ご連絡ください。

   http://java.sun.com/mail/

この Web ページの内容をまとめると次のようになります。

 - テクニカルヘルプ - Sun では無償のテクニカルヘルプを提供していません。
   プログラミングに関する問題でヘルプが必要な場合には、この Web ページでヘ
   ルプの入手先を調べることができます。

 - JavaSoft の E-mail アドレス - 次に示すのは、この JDKのリリース時の
   最新 E-mail アドレスです。ご意見やご提案はこのアドレスまでお送りく
   ださい。

      java-intl@java.sun.com                   国際化
      java-awt@java.sun.com                    AWT パッケージ
      java-security@java.sun.com               Security パッケージ
      java-io@java.sun.com                     IO パッケージ
      java-net@java.sun.com                    Net パッケージ
      jdbc@wombat.eng.sun.com                  JDBC パッケージ
      jdbc-odbc@wombat.eng.sun.com             JDBC-ODBC ブリッジ
      java-beans@java.sun.com                  Beans パッケージ
      reflection-comments@worthy.eng.sun.com   Reflection パッケージ
      jni@java.sun.com                         Java ネイティブ・インターフェース

   ご意見の内容がどの分類にも当てはまらない場合は、次のアドレスにお
   送りください。

      jdk-comments@java.sun.com                一般的なご意見

   1 つ 1 つのご意見に回答を返すことはできませんが、すべてのご意見に目を
   通します。

-----------------------------------------------------------------------
バグの報告と機能に関する要望
-----------------------------------------------------------------------
バグの報告と機能に関する要望がある場合は、次の Web ページを参照してくだ
さい。

    http://java.sun.com/cgi-bin/bugreport.cgi

このページから、すでに報告されているバグのリストにアクセスし、報告しよう
としているバグがそれらと重複していないかどうかを調べることができます。ま
た、バグと要望の送信の手順も記載さています。

報告したバグが「既知のバグ」ページや「修正済みのバグ」ページに追加される
とは限りません。これらのページには重要なバグだけが記載されます。

バグ報告を送信する際には、使用した JDK のバージョン番号を必ず併記してく
ださい。JDK のバージョン番号を調べるには、次のコマンドを実行します。

    java -version


-----------------------------------------------------------------------
JavaBeans(tm) と Beans Development Kit
-----------------------------------------------------------------------
Beans Development Kit (BDK) も JavaSoft のサイトから簡単にダウンロード
することができます。BDK には、BeanBox コンテナ、サンプルや beans の例など、
JavaBeans 開発者のための専用ツールとサポートが含まれています。次の Web 
ページを参照してください。

    http://java.sun.com/beans/bdk_download.html

JDK に加え、BDK の出荷も続けていきます。最新の BDK、ツール、
JavaBeans の一般情報は、次の JavaBeans の Web サイトで定期的に提供してい
きます。

   http://java.sun.com/beans



=======================================================================
                    JAVA のインストールと実行
=======================================================================

-----------------------------------------------------------------------
インストールに関する注意
-----------------------------------------------------------------------
    
    重要 : このリリースをインストールする前に、著作権とライセンス条項 (C
    OPYRIGHT ファイルおよび LICENSE ファイル)をきちんと理解するようにし
    てください。

JDK 1.1.1 ソフトウェアとドキュメンテーションは「バンドル」と呼ばれる 2 つ
の圧縮ファイルに含まれており、それぞれ個別にダウンロードすることができま
す。これらの 2 つのファイル間のリンクを保つために、次の手順で unzip を行っ
てください。

次に、 unzip の手順を簡単に説明します (インストールの具体的な手順はプラット
フォームによって異なるので、ここではごく一般的な説明にとどめます)。

   1.  ソフトウェアとドキュメンテーションを別々にダウンロードします。

            http://java.sun.com/products/JDK/1.1/ 

   2. プラットフォームごとのインストール手続きは、以下の Web ページに
   掲載されています。これにしたがってインストールしてください。

    http://java.sun.com/products/jdk/1.1/installation-solaris2.html

   ないし

    http://java.sun.com/products/jdk/1.1/installation-win32-x86.html

   3. 手順 2 の指示に従って、ソフトウェアバンドルとドキュメンテーション
   バンドルを展開します。ディレクトリ構造は下に示すような形になるはず
   です。

   4. Windows または Solaris で PATH および CLASSPATH を設定します。詳細
   については以降の節を参照してください。

   5. Web ブラウザを使って「docs」ディレクトリの「index.html」を開き、最
   初のページ (目次) を表示します。

           jdk1.1/docs/index.html


                           jdk1.1.1
    _________________________|_____________________________________
   |      |         |      |       |    |     |   |    |    |      |
README CHANGES COPYRIGHT LICENSE bin include lib demo src docs index.htm
l
                                                            |
                               _____________________________|_____
                              ||      |        |       |          |
                             api  tooldocs relnotes  guide    index.html
                              ||      |        |
  

   Solaris の場合、上記の「src」ディレクトリは最初は「src.zip」という名
   前のファイルになっているので、自分で unzip する必要があります。Windows
   の場合は、インストーラーが自動的に unzip してくれます。

-----------------------------------------------------------------------
MICROSOFT WINDOWS で Java ツールを起動する
-----------------------------------------------------------------------

JDK ソフトウェアのインストールが終了したら、DOS プロンプトにおいて
コマンド名および引数としてファイル名を与えることでツールを起動する
ことができます。すべての Java ツールは GUI を持たず、コマンドライン
から起動します。(例: javac アイコンをダブルクリックすると、一瞬 DOS
プロンプトが開き、すぐに閉じてしまいます。なぜなら、この方法はjavac
を起動する正しい方法ではないからです。)

ツールへのパス名は、コマンドプロンプト上で毎回指定するか、あるいは
autoexec.bat へパスを追加することで指定できます。例として、JDK が
c:\jdk1.1.1 にインストールされていて、myfile.java をコンパイルする
場合には、DOS プロンプトを立ちあげ、

  c:\dk1.1.1\bin\javac myfile.java  と入力する

もしくは

  環境変数 PATH に c:\jdk1.1.1\bin を追加する
  javac myfile.java  と入力する

とする必要があります。PATH と CLASSPATH の設定については次節を参照
ください。

-----------------------------------------------------------------------
MICROSOFT WINDOWS の PATH と CLASSPATH
-----------------------------------------------------------------------

CLASSPATH は必須ではありませんが、設定されているならば、設定解除する
必要があります。PATH 環境変数の設定は便宜に応じて行ってください。

      JDK 1.0.2 と 1.1.1 の両方で開発する場合 - JDK1.0.2 と JDK1.1.1 の両方
      で開発しなければならない場合、CLASSPATH (と PATH) を個別に設定
      する必要があります。両方を同時に実行させたい場合、個別の
      DOS プロンプトから起動することができます。同時に実行させることが
      ない場合には、バッチスクリプトを書いて CLASSPATH (と PATH) を切り替えること
      ができます。

      Windows NT のみの場合 - Windows NT を使用する場合は、代わりにコントロー
      ルパネルで次の環境変数を変更することができます。コントロールパネル
      のシステムを選択し、環境変数を編集してください。

   1. PATH - パスに次の絶対ディレクトリを追加します。

           jdk1.1.1\bin

      PATH ステートメントにディレクトリを追加すると、Windows はカレント
      ディレクトリがどのディレクトリになっていても、実行可能ファイル (ja
      vac、java、javadoc など) を見つけることができます。

      PATH が現在どのようになっているかを調べるには、DOS プロンプトにて
      以下のように入力してください:

          C:\> path

      PATH 変数を変更するには、AUTOEXEC.BAT ファイルを開いて PATH ステー
      トメントに変更を加えます。Windows 95 で AUTOEXEC.BAT ファイルを編
      集する手順は次のとおりです。

       i.  「スタート」、「プログラム」、「アクセサリ」の順に選択して、「ワード
           パッド」、または「メモ帳」を選択し、テキストエディタを起動します。
       ii. 「ファイル」メニューから「開く」を選択して「c:\autoexec.bat」
            と入力します。すると AUTOEXEC.BAT ファイルが開いて編集できる状態
            になります。
      iii.  PATH ステートメントを探します。PATH ステートメントは、いくつ
           かのディレクトリをセミコロン (;) で区切って連結した形になっていま
           す。Windows は PATH ステートメントのディレクトリを左から右の順で探
           してプログラムを見つけます。PAHT ステートメントの中の JDK の他の
	 　バージョンを見つけます。classes.zip ファイルへのパスはひとつだけ存在します。 
	 　この意味がよく分からない場合は、java ディレクトリを PATH ステートメント
	   の最後に追加してください。次に、java ディレクトリを最後に追加した例
	   を示します。

           PATH C:\WINDOWS;C:\WINDOWS\COMMAND;C:\;C:\DOS;C:\JDK1.1.1\BIN 

      この PATH を有効にするには、

           C:\> autoexec.bat

      と入力してください。


   2. CLASSPATH 環境変数 - デフォルトのままのインストールを行った場合には、
      CLASSPATH を設定する必要はありません。ツール群が自動的にデフォルトの
      設定を行います。(実際には、ベータ版と 1.1 リリースでも成り立つのです
      が、明記されていませんでした。) CLASSPATH 環境変数が設定されていな
      ければ、以下の手順はスキップできます。

      CLASSPATH を設定解除する

         CLASSPATH 環境変数がすでに設定されており、設定を解除したい場合、
         現在の設定 (コマンド行で) と初期設定 (初期ファイルまたはスクリプト)
         の2箇所を変更する必要があります。例えば、現在の設定を見るには

         % set

         と入力します。このコマンドは、現在設定されている環境変数をすべて
         出力します。CLASSPATH 環境変数が設定されていなければ、この中には
         現われません。

         もし CLASSPATH が設定されているならば、

         % set CLASSPATH=

         と「空文字列」を与えることで設定解除できます。

         上の設定を恒久化するには、さらに初期設定ファイル (autoexec.bat) を
         開き、CLASSPATH 環境変数から JDK クラスへのパスを削除してください。

       CLASSPATH とは何か

          CLASSPATH とは、Java Virtual Machine およびその他の Java アプリケーション
          (jdk1.1.1\bin にあるもの) にクラスライブラリの存在する場所（たとえば
          lib ディレクトリにある classes.zip）を指定するものです。

          標準設定では、java ツール群は、明示的に設定されている CLASSPATH の
          後ろに一時的に

           .;[bin]\..\classes;[bin]\..\lib\classes.zip

          を追加します。ここで、[bin] は JDK1.1.1\bin ディレクトリの絶対パス
          に置き換えられます。したがって、bin ディレクトリと lib ディレクトリを
          同じディレクトリの下においておくかぎり、Java インタープリタはクラス
          ファイルを見失うことはありません。CLASSPATH を設定しなければならな
          い場合とは、classes.zip を移動した場合、もしくは明示的に標準と違う
          ライブラリをロードしなければならない場合に限られます。

      詳細については以降のトラブルシューティングの節を参照してください。


-----------------------------------------------------------------------
Windows インストールのトラブルシューティング
-----------------------------------------------------------------------

ここでは、Windows でのトラブルに対する解決方法を 4 つ紹介します。

   * 次のエラーメッセージが表示された場合

        net.socketException: errno = 10047

        または

        Unsupported version of Windows Socket API

     インストールしている TCP/IP ドライバをチェックしてください。AppletV
     iewer がサポートしているドライバは、Windows 95 付属の Microsoft TCP
     /IP ドライバだけです。それ以外のドライバ (Trumpet Winsock な
     ど) を使用している場合は、ネイティブの Microsoft TCP/IP ドライバに
     変更しないと、ネットワークを介してアプレットをロードすることができ
     ません。

   * AppletViewer でアプレットをロードできない場合は、次のようにしてみて
     ください。
      1. 次のコマンドを実行します。
         set HOMEDRIVE=c:
         set HOMEPATH=\
         AppletViewer を同じ DOS ウィンドウで再起動します。 

      2. 次のコマンドを実行します。
         set HOME=c:\
         AppletViewer を同じ DOS ウィンドウで再起動します。 

     この 2 つの操作を行ってもうまくいかない場合は、次のコマンドを実行し
     てください。

         java -verbose sun.applet.AppletViewer

     このコマンドを実行すると、ロードされるクラスがリストされます。この
     リストから、AppletViewer がどのクラスをロードしようとしているか、ま
     たどこからロードしているかを調べることができます。これらのクラスが
     存在するかどうか、また何かの原因で破損していないかどうかを調べてく
     ださい。

   * 次のエラーメッセージが表示された場合

        Exception in thread NULL

        または

        Unable to initialize threads: cannot find class java/lang/Thread

     java、javac、appetviewer の実行中に上記のうちのいずれかの致命的なエラーメッセージ
     が表示された場合は、CLASSPATH 環境変数をチェッ
     クしてください。この環境変数に「c:\java」、または前の JDK リリースの「classes」
     ディレクトリがリストされている可能性があります。このような場合は、CLASSPA
     TH 変数の設定を解除するか、最新バージョンの JDK クラスライブラリだ
     けを含むように変更してください。


        C:\> set CLASSPATH=.;C:\jdk1.1.1\lib\classes.zip

     このようにすると、このリリースの正しいクラスを確実に使用することが
     できます。

   * AppletViewer の著作権ウィンドウを終了できない場合 (Windows 95 のみ)
     Microsoft Windows 95 では、AppletViewer の著作権ウィンドウの「同意する」
     ボタンと「同意しない」ボタンがタスクバーで隠れて見えなくなってしまう
     ことがあります。このような場合は、Windows 95 のタスクバーをデスクト
     ップの側面に移動すれば、著作権ウィンドウの「同意する」ボタンと「同意しない」
     ボタンが見えるようになります。


-----------------------------------------------------------------------
SOLARIS で Java ツールを起動する
-----------------------------------------------------------------------

JDK ソフトウェアのインストールが終了したら、シェル・ウィンドウにお
いてコマンド名および引数としてファイル名を与えることでツールを起動
することができます。ツールへのパス名は、毎回指定するか、あるいは
初期設定ファイルへパスを追加することで指定できます。例として、JDK が
/usr/local/jdk1.1.1 にインストールされていて、myfile.java をコンパ
イルする場合には、シェル・ウィンドウに移動して

  /usr/local/jdk1.1.1/bin/javac myfile.java  と入力する

もしくは

  環境変数 PATH に /usr/local/jdk1.1/bin を追加する
  javac myfile.java  と入力する

とする必要があります。PATH と CLASSPATH の設定については次節を参照
ください。


-----------------------------------------------------------------------
SOLARIS の PATH と CLASSPATH
-----------------------------------------------------------------------

CLASSPATH は必須ではありませんが、設定されている場合は設定解除する
必要があります。path 環境変数を更新する必要があるかも知れません。
PATH 環境変数の設定は便宜に応じて行ってください。

      JDK 1.0.2 と 1.1.1 の両方で開発する場合 - JDK1.0.2 と JDK1.1.1 の
      両方で開発しなければならない場合、CLASSPATH (と PATH) を個別に
      設定する必要があります。両方を同時に実行させたい場合、個別
      のシェル・ウィンドウから起動することができます。同時に実行させ
      ることがない場合には、バッチスクリプトを書いて CLASSPATH (と PATH) 
      を切り替えることができます。
  

  1. PATH 変数 - Unix パス変数に次のディレクトリを追加します。
         jdk1.1.1/bin

     path 変数は、現在のディレクトリがどこであろうと実行可能ファイル
     (javac, java, javadoc 等)を探すことができるように、どこを探せば
     よいか知らせておくものです。java ツールに対してどのパスが設定さ
     れているかを調べるには、

         % which java

     とすると、発見できるときはそのパス名を表示します。

     C shell (csh) をお使いの場合は、初期設定ファイル (~/.cshrc) に
     以下の設定をすることで PATH を設定することができます。

         set path=($path /usr/local/jdk1.1.1/bin)

     その後、もう１度初期設定ファイルを読み直し、PATH がちゃんと設定
     されているかどうか確認するには、

         % source ~/.cshrc
         % which java

     と入力してください。


   2. CLASSPATH 環境変数 - デフォルトのままのインストールを行った場合には、
      CLASSPATH を設定する必要はありません。ツール群が自動的にデフォルトの
      設定を行います。(実際には、ベータ版と 1.1 リリースでも成り立つのです
      が、明記されていませんでした。) CLASSPATH 環境変数が設定されていな
      ければ、以下の手順はスキップできます。

      JDK1.0.2 と JDK1.1.1 の
      両方で開発しなければならない場合、CLASSPATH を個別にそれぞれ
      設定する必要があります。両方を同時に実行させたい場合、個別
      のドス・ウィンドウから起動することができます。同時に実行させ
      ることがない場合には、バッチスクリプトを書いて CLASSPATH を切
      り替えることができます。
  
     CLASSPATH を設定解除する

       CLASSPATH 環境変数がすでに設定されており、設定を解除したい場合、
       現在の設定 (コマンドラインでの設定) と初期設定 (初期化ファイル)
       の2箇所を変更する必要があります。例えば、現在の設定を見るには

         % echo $CLASSPATH

       と入力します。

       もし CLASSPATH が設定されているならば、

         % unsetenv CLASSPATH

       とすることで設定解除できます。

       上の設定を恒久化するには、さらに初期設定ファイル (~/.cshrc) を
       開き、CLASSPATH 環境変数から JDK クラスへのパスを削除してください。

     CLASSPATH とは何か

        CLASSPATH とは、Java Virtual Machine およびその他の Java アプリケーション
        (jdk1.1.1\bin にあるもの) にクラスライブラリの在りか（たとえば
        lib ディレクトリにある classes.zip）を伝達するものです。

        標準設定では、java ツール群は、明示的に設定されている CLASSPATH の
        後ろに一時的に

         .:[bin]/../classes:[bin]/../lib/classes.zip

        を追加します。ここで、[bin] は JDK1.1.1/bin ディレクトリの絶対パス
        に置き換えられます。したがって、bin ディレクトリと lib ディレクトリを
        同じディレクトリの下においておくかぎり、Java インタープリタはクラス
        ファイルを見失うことはありません。CLASSPATH を設定しなければならない
        場合とは、classes.zip を移動した場合、もしくは明示的に標準と違う
        ライブラリをロードしなければならない場合に限られます。

      詳細については以降のトラブルシューティングの節を参照してください。

-----------------------------------------------------------------------
SOLARIS インストールのトラブルシューティング
-----------------------------------------------------------------------

   * 次のエラーメッセージが表示された場合

        Exception in thread NULL

        または

        Unable to initialize threads: cannot find class java/lang/Thread

     java、javac、appetviewer の実行中に上記のうちのいずれかの致命的な
   　エラーメッセージが表示された場合は、CLASSPATH 環境変数をチェッ
     クしてください。この環境変数に「java」、または前の JDK リリースの
    「classes」ディレクトリがリストされている可能性があります。このような
     場合は、CLASSPATH 変数の設定を解除するか、最新バージョンの JDK クラス
     ライブラリだけを含むように変更してください。

     次に例を示します。

     % setenv CLASSPATH .:/usr/local/jdk1.1/lib/classes.zip

     このようにすると、このリリースの正しいクラスを確実に使用することが
     できます。

-----------------------------------------------------------------------
AppletViewer でのアプレットの実行方法
-----------------------------------------------------------------------
AppletViewer を使うと、Web ページ (HTML ページ) で APPLET タグを使って呼
び出される 1 つまたは複数の Java アプレットを実行することができます。
AppletViewer は HTML ファイル内の APPLET タグを探し、そのタグで指定されてい
るとおりにアプレットを実行します。

AppletViewer は、アプレットを見るためのツールです。たくさんの HTML タグ
を含む Web ページ全体を表示することはできません。AppletViewer は APPLET 
タグのみを認識し、Web ページ内にあるほかの HTML タグは認識しません。
  
AppletViewer でアプレットを実行するには、オペレーティングシステムのコマ
ンドラインで AppletViewer を起動する際に、Web ページのファイル名または 
URL を引数として渡します。

-------
SOLARIS

Solaris でファイルベースの Web ページを使って AppletViewer を起動する例
を示します。「jdk1.1.1」ディレクトリに移動してから、次のコマンドを実行しま
す。

  bin/appletviewer demo/GraphLayout/example1.html

次に、Solaris で URL ベースの Web ページを使って AppletViewer を起動する
例を示します。

  bin/appletviewer http://java.sun.com/applets/NervousText/example1.html

-------
WINDOWS

次に、Windows でファイルベースの Web ページを使用して AppletViewer を起
動する例を示します。DOS プロンプトで「jdk1.1.1」ディレクトリに移動し、次の
コマンドを実行します。

  bin\appletviewer demo\GraphLayout\example1.html

次に、Windows で URL ベースの Web ページを使用して AppletViewer を起動す
る例を示します。

  bin\appletviewer http://java.sun.com/applets/NervousText/example1.html

------------------------------------------------------------------------
Java デバッガ (JDB) でのプログラムのデバッグ方法
------------------------------------------------------------------------
AppletViewer の -debug オプションを使ってデバッグを行うことができます。
アプレットをデバッグするときには、そのアプレットの HTML ファイルを含むデ
ィレクトリから AppletViewer を呼び出すことをお薦めします。

Solaris でデバッグを行う例 :

    cd demo/TicTacToe
    ../../bin/appletviewer -debug example1.html

PC でデバッグを行う例 :

    cd demo\TicTacToe
    ..\..\bin\appletviewer -debug example1.html

デバッガと API のドキュメンテーションは次の Web サイトで見ることができま
す。

    http://java.sun.com/products/JDK/debugging/


-----------------------------------------------------------------------
Copyright (C) 1996,1997 Sun Microsystems, Inc.
2550 Garcia Ave., Mountain View, CA 94043-1100 USA.
All rights reserved.



